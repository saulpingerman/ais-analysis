[project]
name = "ais-analysis"
version = "2.0.0"
description = "High-performance S3-based pipeline for processing AIS data from the Danish Maritime Authority"
authors = [
    {name = "Paul Singerman", email = "saulpingerman@users.noreply.github.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: GIS",
]
keywords = ["ais", "maritime", "data-processing", "s3", "aws", "analytics"]

dependencies = [
    "polars==1.30.0",
    "pyarrow==20.0.0", 
    "pandas==2.3.0",
    "boto3",
    "PyYAML==6.0",
    "geopy==2.4.1",
    "tqdm==4.67.1",
    "tabulate",
    "requests",
    "matplotlib==3.9.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/saulpingerman/ais-analysis"
Repository = "https://github.com/saulpingerman/ais-analysis"
Issues = "https://github.com/saulpingerman/ais-analysis/issues"

[project.scripts]
ais-download = "scripts.download_ais_data:main"
ais-process = "scripts.s3_ais_processor:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["scripts", "tests"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "RUF"]
ignore = ["E501", "COM812", "ISC001"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true